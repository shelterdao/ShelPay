{"version":3,"sources":["../../util (ignored)","webpack:///util (ignored)?c787","../../buffer (ignored)","../../crypto (ignored)","webpack:///crypto (ignored)?b38e","webpack:///crypto (ignored)?9ecc","../../src/pipes/divide-by-exponential-base-ten.pipe.ts","../../src/pipes/format-levy.pipe.ts","../../src/pipes/search-contact.pipe.ts","../../src/app/app.component.ts","../../src/pages/transactions/partials/importance-transfer-transaction/importance-transfer-transaction.ts","../../src/pages/transactions/partials/mosaic-definition-transaction/mosaic-definition-transaction.ts","../../src/pages/transactions/partials/mosaic-supply-change-transaction/mosaic-supply-change-transaction.ts","../../src/pages/transactions/partials/multisig-transaction/multisig-transaction.ts","../../src/pages/transactions/partials/provision-namespace-transaction/provision-namespace-transaction.ts","../../src/pages/transactions/partials/transfer-transaction/transfer-transaction.ts","../../src/pages/transactions/partials/multisig-aggregate-modification-transaction/multisig-aggregate-modification-transaction.ts","../../src/providers/contact/contact.provider.ts","../../src/pages/balance/balance.ts","../../src/providers/nem/nem.provider.ts","../../src/pages/contact/list/list.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/wallet/wallet.provider.ts","../../src/providers/alert/alert.provider.ts","../../src/pages/login/login.ts","../../src/providers/language/language.provider.ts","../../src/pages/account/account.ts","../../src/pages/transfer/transfer.ts","../../src/pages/receive/receive.ts","../../src/pages/signup/signup.ts","../../src/pages/signup_simplewallet/signup.ts","../../src/pages/signup_privatekey/signup.ts","../../src/pages/transactions/transactions.ts","../../src/pages/transactions_confirmed/transactions.ts","../../src/pages/transactions_unconfirmed/transactions.ts","../../src/pages/contact/update/update.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/toast/toast.provider.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1048\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1050\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 1082\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1083\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1150\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1327\n// module chunks = 0","import {Pipe, PipeTransform} from '@angular/core';\n\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 |  exponentialStrength:10}}\n *   formats to: 1024\n */\n@Pipe({name: 'exponentialStrength'})\nexport class DivideByExponentialBaseTenPipe implements PipeTransform {\n    transform(value: number, exponent: string): number {\n        let exp = parseFloat(exponent);\n        return value / Math.pow(10, isNaN(exp) ? 1 : exp);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/divide-by-exponential-base-ten.pipe.ts","import {Pipe, PipeTransform} from '@angular/core';\nimport {NemProvider} from '../providers/nem/nem.provider';\n\nimport {MosaicTransferable} from 'nem-library';\n\n@Pipe({name: 'formatLevy'})\nexport class FormatLevyPipe implements PipeTransform {\n    constructor(public nem: NemProvider) {\n    }\n\n    transform(mosaic: MosaicTransferable): any {\n        return this.nem.formatLevy(mosaic);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/format-levy.pipe.ts","import {Pipe, PipeTransform} from '@angular/core';\nimport {ContactProvider} from '../providers/contact/contact.provider';\nimport {Platform} from 'ionic-angular';\n\n/*\n * Replace's Address by Contact Name from Database\n * Takes the owner as a parameter\n * Usage:\n *   value | searchContact:owner\n * Example:\n *   {{ 2 |  searchContact:owner}}\n *   formats to: name\n */\n\n@Pipe({name: 'searchContact'})\nexport class SearchContactPipe implements PipeTransform {\n    constructor(public contact: ContactProvider, private platform: Platform) {\n    \n    }\n\n    transform(value: string, owner: string): any {\n    \tif(this.platform.is('cordova')){\n\n\t\t\treturn this.contact.searchContactName(owner, value).then(contacts =>{\n\t\t\t\tif(contacts.length > 0){\n\t\t\t\t\treturn contacts[0].name;\n\t\t\t\t}\n\t\t\t\telse return value;\n\t\t\t});\n\t\t}\n\t\telse{\n    \t\treturn Promise.resolve(value);\n\t\t}\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/search-contact.pipe.ts","import {Component, ViewChild} from '@angular/core';\nimport {Platform, Nav} from 'ionic-angular';\n\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { AppVersion } from '@ionic-native/app-version';\n\nimport {ContactProvider} from '../providers/contact/contact.provider';\nimport {AlertProvider} from '../providers/alert/alert.provider';\nimport {LanguageProvider} from '../providers/language/language.provider';\n\nimport {AccountPage} from '../pages/account/account';\nimport {TransactionsPage} from '../pages/transactions/transactions';\nimport {BalancePage} from '../pages/balance/balance';\nimport {LoginPage} from '../pages/login/login';\nimport {ContactListPage} from '../pages/contact/list/list';\n\nimport {Network} from '@ionic-native/network';\n\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n    @ViewChild(Nav) navCtrl: Nav;\n    rootPage: any = LoginPage;\n    version: string = \"\";\n\n    constructor(private platform: Platform, private statusBar: StatusBar, private splashScreen: SplashScreen, private network: Network, private alert: AlertProvider,  private contact: ContactProvider, private language: LanguageProvider, private sqlite: SQLite, private appVersion: AppVersion) {\n        platform.ready().then(() => {\n\n            network.onDisconnect().subscribe(() => {\n                this.alert.showOnPhoneDisconnected();\n            });\n\n            this.language.setLanguage();\n            this.setDatabase();\n\n            //ionic default\n            statusBar.styleDefault();\n        });\n\n        // this.version = this.appVersion.getVersionNumber();\n        if (this.platform.is('cordova')) {\n            this.appVersion.getVersionNumber().then((v) => {\n                this.version = \"V. \"+v;\n            });\n        }\n        else this.version = \"Web Version\";\n    }\n\n    goToBalance(params) {\n        if (!params) params = {};\n        this.navCtrl.setRoot(BalancePage);\n    }\n\n    goToAccount(params) {\n        if (!params) params = {};\n        this.navCtrl.setRoot(AccountPage);\n    }\n\n    goToTransactions(params) {\n        if (!params) params = {};\n        this.navCtrl.setRoot(TransactionsPage);\n    }\n\n    goToContactList(params) {\n        if (!params) params = {};\n        if (this.platform.is('cordova')) {\n         this.navCtrl.setRoot(ContactListPage);\n\n        }else {\n            this.alert.showFunctionallityOnlyAvailableInMobileDevices();\n        }\n    }\n\n    private setDatabase(){\n        if (this. platform.is('cordova')){\n            this.sqlite.create({\n                name: 'data.db',\n                location: 'default'\n            }).then((db: SQLiteObject) => {\n                console.log('INFO: Database created');\n                this.contact.setDatabase(db);\n                this.contact.createTable().then(_=>{\n                    this.splashScreen.hide();\n                });\n\n            }).catch(error =>{\n                console.error(error);\n            });\n        }\n        else this.splashScreen.hide();\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","//\"type\": 2049\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\n\n@Component({\n    selector: 'importance-transfer-transaction',\n    templateUrl: 'importance-transfer-transaction.html'\n})\n\nexport class ImportanceTransferTransactionComponent {\n    @Input() tx: any;\n\n\n    constructor(private nem: NemProvider) {\n    }\n\n    ngOnInit(){\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/importance-transfer-transaction/importance-transfer-transaction.ts","//\"type\": 16385\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\n\n@Component({\n    selector: 'mosaic-definition-transaction',\n    templateUrl: 'mosaic-definition-transaction.html'\n})\n\nexport class MosaicDefinitionTransactionComponent {\n    @Input() tx: any;\n\n\n    constructor(private nem: NemProvider) {\n    }\n\n    ngOnInit(){\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/mosaic-definition-transaction/mosaic-definition-transaction.ts","//\"type\": 16386\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\n\n@Component({\n    selector: 'mosaic-supply-change-transaction',\n    templateUrl: 'mosaic-supply-change-transaction.html'\n})\n\nexport class MosaicSupplyChangeTransactionComponent {\n    @Input() tx: any;\n\n\n    constructor(private nem: NemProvider) {\n    }\n\n    ngOnInit(){\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/mosaic-supply-change-transaction/mosaic-supply-change-transaction.ts","//\"type\": 4100\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../../../providers/wallet/wallet.provider'\n\nimport {Address, TransferTransaction} from \"nem-library\";\n@Component({\n    selector: 'multisig-transaction',\n    templateUrl: 'multisig-transaction.html'\n})\n\nexport class MultisigTransactionComponent {\n    @Input() tx: any;\n\n    hasLevy:boolean;\n    owner: Address;\n\n    constructor(private nem: NemProvider, private wallet: WalletProvider) {\n        this.hasLevy = false;\n    }\n\n    private _populateMosaicsWithDefinitionData(){\n        if ((<TransferTransaction>this.tx.otherTransaction).mosaics) {\n            this.nem.addDefinitionToMosaics(this.tx.otherTransaction.mosaics).subscribe(mosaics => {\n                this.tx.otherTransaction.mosaics = mosaics;\n                this.hasLevy = this.nem.transactionHasAtLeastOneMosaicWithLevy(mosaics);\n            });\n        }\n    }\n\n    private _setOwner(){\n        this.wallet.getSelectedWallet().then(wallet =>{\n            this.owner = wallet.address;\n        })\n    }\n\n    ngOnInit() {\n        this._populateMosaicsWithDefinitionData();\n        this._setOwner();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/multisig-transaction/multisig-transaction.ts","//type: 8193\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\n\n@Component({\n    selector: 'provision-namespace-transaction',\n    templateUrl: 'provision-namespace-transaction.html'\n})\n\nexport class ProvisionNamespaceTransactionComponent {\n    @Input() tx: any;\n\n    constructor(private nem: NemProvider) {\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/provision-namespace-transaction/provision-namespace-transaction.ts","//\"type\": 257\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../../../providers/wallet/wallet.provider'\n\nimport {Address} from \"nem-library\";\n@Component({\n    selector: 'transfer-transaction',\n    templateUrl: 'transfer-transaction.html'\n})\n\nexport class TransferTransactionComponent {\n    @Input() tx: any;\n\n    hasLevy:boolean;\n    owner: Address;\n\n    constructor(private nem: NemProvider, private wallet: WalletProvider) {\n        this.hasLevy = false;\n    }\n\n    private _populateMosaicsWithDefinitionData(){\n        if (this.tx.mosaics){\n            this.nem.addDefinitionToMosaics(this.tx.mosaics).subscribe(mosaics => {\n                this.tx.mosaics = mosaics;\n                this.hasLevy = this.nem.transactionHasAtLeastOneMosaicWithLevy(mosaics);\n            });\n        }\n    }\n\n    private _setOwner(){\n        this.wallet.getSelectedWallet().then(wallet =>{\n            this.owner = wallet.address;\n        })\n    }\n\n    ngOnInit() {\n        this._populateMosaicsWithDefinitionData();\n        this._setOwner();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/transfer-transaction/transfer-transaction.ts","//\"type\": 4700\n\nimport { Component, Input } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport {NemProvider} from '../../../../providers/nem/nem.provider';\n\n@Component({\n    selector: 'multisig-aggregate-modification-transaction',\n    templateUrl: 'multisig-aggregate-modification-transaction.html'\n})\n\nexport class MultisigAggregateModificationTransactionComponent {\n    @Input() tx: any;\n\n\n    constructor(private nem: NemProvider) {\n    }\n\n    ngOnInit(){\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/partials/multisig-aggregate-modification-transaction/multisig-aggregate-modification-transaction.ts","import { Injectable } from '@angular/core';\nimport { SQLiteObject } from '@ionic-native/sqlite';\n\n@Injectable()\nexport class ContactProvider {\n\n  // public properties\n\n  db: SQLiteObject = null;\n\n  constructor() {}\n\n  setDatabase(db: SQLiteObject){\n    if(this.db === null){\n      this.db = db;\n    }\n  }\n\n  create(owner: string, name: string, address: string){\n    let sql = 'INSERT INTO contact(owner, name, address) VALUES(?,?,?)';\n    return this.db.executeSql(sql, [owner, name, address]);\n  }\n\n  createTable(){\n    let sql = 'CREATE TABLE IF NOT EXISTS contact(id INTEGER PRIMARY KEY AUTOINCREMENT, owner TEXT, name TEXT, address TEXT)';\n    return this.db.executeSql(sql, []);\n  }\n\n  delete(id: number){\n    let sql = 'DELETE FROM contact WHERE id=?';\n    return this.db.executeSql(sql, [id]);\n  }\n\n  getAllByOwner(owner: string){\n    let sql = 'SELECT * FROM contact WHERE owner = ?';\n    return this.db.executeSql(sql, [owner])\n    .then(response => {\n      let contacts = [];\n      for (let index = 0; index < response.rows.length; index++) {\n        contacts.push( response.rows.item(index) );\n      }\n      return Promise.resolve( contacts );\n    })\n    .catch(error => Promise.reject(error));\n  }\n\n  update(id: number, name: string, address: string){\n    let sql = 'UPDATE contact SET name=?, address=? WHERE id=?';\n    return this.db.executeSql(sql, [name, address, id]);\n  }\n\n  searchContactName(owner:string, address:string){\n    let sql = 'SELECT * FROM contact WHERE owner = ? AND address=?';\n      return this.db.executeSql(sql, [owner, address])\n      .then(response => {\n        let contacts = [];\n        for (let index = 0; index < response.rows.length; index++) {\n          contacts.push( response.rows.item(index) );\n        }\n        return Promise.resolve( contacts );\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/contact/contact.provider.ts","import {Component} from '@angular/core';\n\nimport {MenuController, NavController, LoadingController, NavParams} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {TransferPage} from '../transfer/transfer';\nimport {ReceivePage} from '../receive/receive';\n\nimport {LoginPage} from '../login/login';\n\nimport {Wallet, MosaicTransferable} from 'nem-library';\n\n@Component({\n    selector: 'page-balance',\n    templateUrl: 'balance.html'\n})\nexport class BalancePage {\n    selectedWallet: Wallet;\n    balance: MosaicTransferable[];\n    selectedMosaic: MosaicTransferable;\n    addressToSendAssets: string;\n\n    constructor(public navCtrl: NavController, private nem: NemProvider, private navParams:NavParams, private wallet: WalletProvider, private menu: MenuController, public translate: TranslateService, private alert: AlertProvider, private loading: LoadingController) {\n        this.addressToSendAssets = navParams.get('address') || null;\n    }\n\n    ionViewWillEnter() {\n        if (!this.addressToSendAssets) this.menu.enable(true);\n\n        this.wallet.getSelectedWallet().then(wallet => {\n            if (!wallet) this.navCtrl.setRoot(LoginPage);\n            else {\n                this.selectedWallet = wallet;\n                this.getBalance(false);\n            }\n        });\n    }\n\n    /**\n     * Retrieves current account owned mosaics  into this.balance\n     * @param refresher  Ionic refresher or false, if called on View Enter\n     */\n    public getBalance(refresher:any) {\n        this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n            let loader = this.loading.create({\n                content: res\n            });\n\n            if (!refresher) loader.present();\n\n            this.nem.getBalance(this.selectedWallet.address).then(balance => {\n                this.balance = balance;\n                if (this.balance.length > 0) {\n                    this.selectedMosaic = this.balance[0];\n                }\n                if (refresher) refresher.complete();\n                else loader.dismiss();\n            });\n        });\n    }\n\n    /**\n     * Moves to transfer, by default with mosaic selected\n     */\n    goToTransfer(){\n        if(this.selectedMosaic.properties.transferable){\n            this.navCtrl.push(TransferPage, {\n                'selectedMosaic': this.selectedMosaic,\n                'address': this.addressToSendAssets\n            });\n        }\n        else this.alert.showMosaicNotTransferable();\n    }\n\n   /**\n     * Moves to receive, by default with mosaic selected\n     */\n    goToReceive(){\n        this.navCtrl.push(ReceivePage, {\n            selectedMosaic: this.selectedMosaic\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/balance/balance.ts","import {Injectable} from '@angular/core';\nimport {Storage} from '@ionic/storage';\n\nimport {\n    NEMLibrary, NetworkTypes, SimpleWallet, \n    Password, Address, Account, AccountHttp, \n    MosaicHttp, AccountOwnedMosaicsService, \n    MosaicTransferable, TransferTransaction,\n    TimeWindow, XEM, PlainMessage,\n    TransactionHttp, NemAnnounceResult,\n    Transaction, Mosaic, MosaicService, \n    QRService, QRWalletText  \n} from \"nem-library\";\n\nimport { Observable } from \"nem-library/node_modules/rxjs\";\n\n/*\n Generated class for the NemProvider provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular DI.\n */\n@Injectable()\nexport class NemProvider {\n    wallets: SimpleWallet[];\n    accountHttp: AccountHttp;\n    mosaicHttp: MosaicHttp;\n    transactionHttp: TransactionHttp;\n    qrService: QRService;\n    accountOwnedMosaicsService: AccountOwnedMosaicsService;\n\n    constructor(private storage: Storage) {\n        NEMLibrary.bootstrap(NetworkTypes.MAIN_NET);\n        this.accountHttp = new AccountHttp();\n        this.mosaicHttp = new MosaicHttp();\n        this.transactionHttp = new TransactionHttp();\n        this.qrService = new QRService();\n        this.accountOwnedMosaicsService = new AccountOwnedMosaicsService(this.accountHttp, this.mosaicHttp);\n    }\n\n    /**\n     * Create Simple Wallet\n     * @param walletName wallet idenitifier for app\n     * @param password wallet's password\n     * @param selected network\n     * @return Promise with wallet created\n     */\n    public createSimpleWallet(walletName: string, password: string): SimpleWallet {\n        return SimpleWallet.create(walletName, new Password(password));\n    }\n\n    /**\n     * Create Wallet from private key\n     * @param walletName wallet idenitifier for app\n     * @param password wallet's password\n     * @param privateKey account privateKey\n     * @param selected network\n     * * @return Promise with wallet created\n     */\n    public createPrivateKeyWallet(walletName, password, privateKey): SimpleWallet {\n        return SimpleWallet.createWithPrivateKey(walletName, new Password(password), privateKey);\n    }\n\n\n    /**\n     * Check if Address it is correct\n     * @param privateKey privateKey\n     * @param address address\n     * @return checkAddress\n     */\n\n    public checkAddress(privateKey: string, address: Address): boolean {\n        return Account.createWithPrivateKey(privateKey).address.plain() == address.plain();\n    }\n\n    /**\n     * Gets private key from password and account\n     * @param password\n     * @param wallet\n     * @return promise with selected wallet\n     */\n    public passwordToPrivateKey(password: string, wallet: SimpleWallet): string {\n        return wallet.unlockPrivateKey(new Password(password));\n    }\n\n    /**\n     * Decrypt private key\n     * @param password password\n     * @param encriptedData Object containing private_key encrypted and salt\n     * @return Decrypted private key\n     */\n\n    public decryptPrivateKey(password: string, encriptedData: QRWalletText): string {\n        return this.qrService.decryptWalletQRText(new Password(password), encriptedData);\n    }\n\n    /**\n     * Generate Address QR Text\n     * @param address address\n     * @return Address QR Text\n     */\n    public generateAddressQRText(address: Address): string {\n        return this.qrService.generateAddressQRText(address);\n    }\n\n    /**\n     * Generate Address QR Text\n     * @param address address\n     * @return Address QR Text\n     */\n    public generateInvoiceQRText(address: Address, amount:number, message: string): string {\n        return this.qrService.generateTransactionQRText(address, amount, message);\n    }\n\n\n    /**\n     * Get mosaics form an account\n     * @param address address to check balance\n     * @return Promise with mosaics information\n     */\n    public getBalance(address: Address): Promise<MosaicTransferable[]> {\n        return this.accountOwnedMosaicsService.fromAddress(address).toPromise();\n    }\n\n    /**\n     * Formats levy given mosaic object\n     * @param mosaic mosaic object\n     * @return Promise with levy fee formated\n     */\n    public formatLevy(mosaic: MosaicTransferable): Promise<number> {\n        let mosaicService = new MosaicService(new MosaicHttp());\n        return mosaicService.calculateLevy(mosaic).toPromise()\n    }\n\n    /**\n     * Check if acount belongs it is valid, has 40 characters and belongs to network\n     * @param address address to check\n     * @return Return prepared transaction\n     */\n    public isValidAddress(address: Address): boolean  {\n\n        // Reset recipient data\n        let success = true;\n        // From documentation: Addresses have always a length of 40 characters.\n        if (!address || address.plain().length != 40) success = false;\n\n        //if raw data, clean address and check if it is from network\n        if (address.network() != NEMLibrary.getNetworkType()) success = false;\n        return success;\n\n    }\n\n    /**\n     * Prepares xem transaction\n     * @param recipientAddress recipientAddress\n     * @param amount amount\n     * @param message message\n     * @return Return transfer transaction\n     */\n    public prepareTransaction(recipientAddress: Address, amount: number, message: string): TransferTransaction {\n        return TransferTransaction.create(TimeWindow.createWithDeadline(), recipientAddress, new XEM(amount), PlainMessage.create(message));\n    }\n\n    /**\n     * Prepares mosaic transaction\n     * @param recipientAddress recipientAddress\n     * @param mosaicsTransferable mosaicsTransferable\n     * @param message message\n     * @return Promise containing prepared transaction\n     */\n    public prepareMosaicTransaction(recipientAddress: Address, mosaicsTransferable: MosaicTransferable[], message: string): TransferTransaction {        \n        return TransferTransaction.createWithMosaics(TimeWindow.createWithDeadline(), recipientAddress, mosaicsTransferable, PlainMessage.create(message));        \n    }\n\n    /**\n     * Send transaction into the blockchain\n     * @param transferTransaction transferTransaction\n     * @param password wallet\n     * @param password password\n     * @return Promise containing sent transaction\n     */\n    public confirmTransaction(transferTransaction: TransferTransaction, wallet: SimpleWallet, password: string): Observable<NemAnnounceResult> {\n        let account = wallet.open(new Password(password));\n        let signedTransaction = account.signTransaction(transferTransaction);\n        return this.transactionHttp.announceTransaction(signedTransaction);\n    }\n\n    /**\n     * Adds to a transaction data mosaic definitions\n     * @param mosaics array of mosaics\n     * @return Promise with altered transaction\n     */\n    public addDefinitionToMosaics(mosaics: Mosaic[]): Observable<MosaicTransferable[]> {\n        return Observable.from(mosaics)\n        .flatMap((mosaic: Mosaic) => {\n            if (XEM.MOSAICID.equals(mosaic.mosaicId)) return Observable.of(new XEM(mosaic.quantity / Math.pow(10, XEM.DIVISIBILITY)));\n            else {\n              return this.mosaicHttp.getMosaicDefinition(mosaic.mosaicId).map(mosaicDefinition => {\n                return MosaicTransferable.createWithMosaicDefinition(mosaicDefinition, mosaic.quantity / Math.pow(10, mosaicDefinition.properties.divisibility));\n              });\n            }\n          })\n          .toArray();\n    }\n\n\n    /**\n     * Returns if transaction has at least one mosaic with levy\n     * @param mosaics array of mosaics\n     * @return Boolean indicating the result\n     */\n\n    public transactionHasAtLeastOneMosaicWithLevy(mosaics: MosaicTransferable[]): boolean{\n        let hasLevy = false;\n        mosaics.filter(mosaic => {\n            if (mosaic.levy) hasLevy = true; \n        });\n        return hasLevy;\n    }\n\n\n    /**\n     * Get all confirmed transactions of an account\n     * @param address account Address\n     * @return Promise with account transactions\n     */\n    public getAllTransactionsFromAnAccount(address: Address): Observable<Transaction[]> {\n        return this.accountHttp.allTransactions(address);\n    }\n\n    /**\n     * Get all unconfirmed transactions of an account\n     * @param address account Address\n     * @return Promise with account transactions\n     */\n    public getUnconfirmedTransactionsFromAnAccount(address: Address): Observable<Transaction[]> {\n        return this.accountHttp.unconfirmedTransactions(address);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/nem/nem.provider.ts","import {Component} from '@angular/core';\nimport {NavController, LoadingController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AlertProvider} from '../../../providers/alert/alert.provider';\nimport {ToastProvider} from '../../../providers/toast/toast.provider';\nimport {WalletProvider} from '../../../providers/wallet/wallet.provider';\nimport {ContactProvider} from '../../../providers/contact/contact.provider';\n\nimport {LoginPage} from '../../login/login';\nimport {UpdateContactPage} from '../update/update';\n\nimport {SimpleWallet} from 'nem-library';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Component({\n    selector: 'page-contact-list',\n    templateUrl: 'list.html'\n})\nexport class ContactListPage {\n    selectedWallet: SimpleWallet;\n    contacts: any;\n    constructor(public navCtrl: NavController, private wallet: WalletProvider, private alert: AlertProvider, private toast: ToastProvider, private contact: ContactProvider, private loading: LoadingController, public translate: TranslateService) {\n\n    }\n\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(value => {\n            if (!value) this.navCtrl.setRoot(LoginPage);\n            else {\n                this.selectedWallet = value;\n                this._getContactsByOwner(value.address.plain());\n            }\n        })\n    }\n\n\n    /**\n     * Updates this.contacts with database owner's contacts\n     * @param owner address\n     */\n\n    private _getContactsByOwner(owner:string) {\n        this.contact.getAllByOwner(owner).then(contacts =>{\n            this.contacts = contacts;\n        });\n    };\n\n\n    /**\n     * Deletes contact from database by id\n     * @param owner address\n     */\n\n    public deleteContact(id:number) {\n        this.contact.delete(id).then(_ =>{\n            this._getContactsByOwner(this.selectedWallet.address.plain());\n        });\n    };\n\n\n    /**\n     * moves to update contact\n     * @param id address\n     * @param name name to edit\n     * @param address address to edit\n     */\n    public goToUpdateContact(id?:number, name?:string, address?:string) {\n        if(id) this.navCtrl.push(UpdateContactPage, {'id': id, 'owner': this.selectedWallet.address.plain(),'name': name, 'address': address});\n        else this.navCtrl.push(UpdateContactPage, {'id': null, 'owner': this.selectedWallet.address.plain(), 'name': null, 'address': null});\n    };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/list/list.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 381;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 381\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 424;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 424\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Storage} from '@ionic/storage';\nimport {LocalDateTime} from \"js-joda\";\nimport {Base64} from \"js-base64\";\nimport {\n     SimpleWallet, NetworkTypes\n} from \"nem-library\";\n\n/*\n Generated class for the NemProvider provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular DI.\n */\n@Injectable()\nexport class WalletProvider {\n    wallets: SimpleWallet[];\n\n    constructor(private storage: Storage) {\n\n    }\n\n    /**\n     * Store wallet\n     * @param wallet\n     * @return Promise with stored wallet\n     */\n    public storeWallet(wallet: SimpleWallet): Promise<SimpleWallet> {\n        let result = [];\n        return this.getWallets().then(\n            value => {\n                result = value;\n                result.push(wallet);\n                result = result.map(_ => _.writeWLTFile());\n                this.storage.set('wallets', JSON.stringify(result));\n                return wallet;\n            }\n        )\n    }\n\n    //Wallets\n\n    /**\n     * Check If Wallet Name Exists\n     * @param walletName\n     * @return Promise that resolves a boolean if exists\n     */\n    public checkIfWalletNameExists(walletName): Promise<boolean> {\n        let exists = false;\n\n        return this.getWallets().then(\n            value => {\n                let wallets = value || [];\n                for (var i = 0; i < wallets.length; i++) {\n                    if (wallets[i].name == walletName) {\n                        exists = true;\n                        break;\n                    }\n                }\n                return exists;\n            }\n        )\n    }\n\n    /**\n     * Retrieves selected wallet\n     * @return promise with selected wallet\n     */\n    public getSelectedWallet(): Promise<SimpleWallet> {\n        return this.storage.get('selectedWallet').then(data => {\n            let result = null;\n            if (data) {\n                result = SimpleWallet.readFromWLT(JSON.parse(data));\n            }\n            return result;\n        });\n    }\n\n    /**\n     * Get loaded wallets from localStorage\n     */\n    public getWallets(): Promise<SimpleWallet[]> {\n        return this.storage.get('wallets').then(data => {\n            let result = [];\n            if (data) {\n                result = JSON.parse(data).map(walletFile => {\n                    if (walletFile.name) {\n                        return this.convertJSONWalletToFileWallet(walletFile); \n                    }else {\n                        return SimpleWallet.readFromWLT(walletFile);\n                    }\n                });\n            }\n            return result;\n        });\n    }\n\n    private convertJSONWalletToFileWallet(wallet): SimpleWallet {\n        let walletString = Base64.encode(JSON.stringify({\n            \"address\": wallet.accounts[0].address,\n            \"creationDate\": LocalDateTime.now().toString(),\n            \"encryptedPrivateKey\": wallet.accounts[0].encrypted,\n            \"iv\": wallet.accounts[0].iv,\n            \"network\": wallet.accounts[0].network == -104 ? NetworkTypes.TEST_NET : NetworkTypes.MAIN_NET,\n            \"name\": wallet.name,\n            \"type\": \"simple\",\n            \"schema\": 1\n          }));\n        return SimpleWallet.readFromWLT(walletString);\n    }\n\n    /**\n     * Set a selected wallet\n     */\n    public setSelectedWallet(wallet: SimpleWallet) {\n        this.storage.set('selectedWallet', JSON.stringify(wallet.writeWLTFile()));\n    }\n\n    /**\n     * Remove selected Wallet\n     */\n    public unsetSelectedWallet() {\n        this.storage.set('selectedWallet', null);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/wallet/wallet.provider.ts","import {Injectable} from '@angular/core';\nimport {AlertController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\n\n// import { Http } from '@angular/http';\n// import 'rxjs/add/operator/map';\n\n/*\n Generated class for the Alert provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular DI.\n */\n\n@Injectable()\nexport class AlertProvider {\n\n    constructor(private alertCtrl: AlertController, private translate: TranslateService) {\n\n    }\n\n    showWalletNotSelectedAlert() {\n        this.translate.get(['ALERT_NOT_WALLET_SELECTED', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_NOT_WALLET_SELECTED'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showInvalidPasswordAlert() {\n\n        this.translate.get(['ALERT_PROVIDED_PASSWORD_INVALID', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_PROVIDED_PASSWORD_INVALID'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n\n    showPasswordDoNotMatch() {\n        this.translate.get(['ALERT_PASSWORDS_DO_NOT_MATCH', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_PASSWORDS_DO_NOT_MATCH'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showWalletNameAlreadyExists() {\n        this.translate.get(['ALERT_WALLET_NAME_ALREADY_EXISTS', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_WALLET_NAME_ALREADY_EXISTS'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showAlertDoesNotBelongToNetwork() {\n\n        this.translate.get(['ALERT_WALLET_IS_NOT_INVALID_FOR_THIS_NETWORK', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_WALLET_IS_NOT_INVALID_FOR_THIS_NETWORK'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showTransactionConfirmed() {\n\n        this.translate.get(['ALERT_TRANSACTION_CONFIRMED', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_TRANSACTION_CONFIRMED'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n\n    }\n\n    showDoesNotHaveEnoughFunds() {\n\n        this.translate.get(['ALERT_ACCOUNT_DOES_NOT_HAVE_ENOUGH_FUNDS', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_ACCOUNT_DOES_NOT_HAVE_ENOUGH_FUNDS'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n\n    }\n\n    showMessageTooLarge() {\n        this.translate.get(['ALERT_SHOW_ATTACHED_MESSAGE_IS_TOO_LARGE', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_SHOW_ATTACHED_MESSAGE_IS_TOO_LARGE'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showMosaicNotTransferable() {\n        this.translate.get(['ALERT_MOSAIC_IS_NOT_TRANSFERABLE', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_MOSAIC_IS_NOT_TRANSFERABLE'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showBarCodeScannerRequiresPassword() {\n        this.translate.get(['IMPORT_ACCOUNT_QR_WARNING', 'OK'], {}).subscribe((res) => {\n\n            let alert = this.alertCtrl.create({\n                title: res['IMPORT_ACCOUNT_QR_WARNING'],\n                buttons: [res['OK']]\n            });\n            alert.present();\n        });\n\n    }\n\n\n    showInvalidPrivateKey() {\n        this.translate.get(['ALERT_INVALID_PRIVATE_KEY', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_INVALID_PRIVATE_KEY'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showWeakPassword() {\n        this.translate.get(['ALERT_WEAK_PASSWORD', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_WEAK_PASSWORD'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n     showFunctionallityOnlyAvailableInMobileDevices() {\n        this.translate.get(['ALERT_ONLY_MOBILE_DEVICE', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_ONLY_MOBILE_DEVICE'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n    showContactAlreadyExists() {\n        this.translate.get(['ALERT_CONTACT_ALREADY_EXISTS', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_CONTACT_ALREADY_EXISTS'],\n                buttons: [res['OK']]\n            });\n\n            alert.present();\n        });\n    }\n\n\n\n    showOnPhoneDisconnected() {\n        this.translate.get(['ALERT_PHONE_DISCONNECTED', 'ALERT_SUBTITLE_PHONE_DISCONNECTED', 'OK'], {}).subscribe((res) => {\n            let alert = this.alertCtrl.create({\n                title: res['ALERT_PHONE_DISCONNECTED'],\n                subTitle: res['ALERT_SUBTITLE_PHONE_DISCONNECTED'],\n                buttons: [res['OK']]\n            });\n            alert.present();\n        });\n    }\n\n\n    showError(error) {\n        this.translate.get('OK', {}).subscribe((res) => {\n\n            let alert = this.alertCtrl.create({\n                title: error,\n                buttons: [res]\n            });\n            alert.present();\n        });\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/alert/alert.provider.ts","import {Component} from '@angular/core';\nimport {MenuController, NavController, LoadingController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {BalancePage} from '../balance/balance';\nimport {SignupPage} from '../signup/signup';\n\nimport {SimpleWallet} from 'nem-library';\n\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html'\n})\nexport class LoginPage {\n\n    wallets: SimpleWallet[];\n    selectedWallet: SimpleWallet;\n    common: any;\n\n\n    constructor(public navCtrl: NavController, private nem: NemProvider, private wallet: WalletProvider,  private alert: AlertProvider, private loading: LoadingController, private menu: MenuController, public translate: TranslateService) {\n\n        this.wallets = [];\n        this.selectedWallet = null;\n\n        // Object to contain our password & private key data.\n        this.common = {\n            'password': '',\n            'privateKey': ''\n        };\n\n        this.wallet.getWallets().then(value => {\n            this.wallets = value;\n\n            //select first loaded wallet by default\n            if(this.wallets.length > 0) this.selectedWallet = this.wallets[0];\n        });\n\n    }\n\n    ionViewWillEnter() {\n        // the left menu should be disabled on the login page\n        this.menu.enable(false);\n    }\n\n    ionViewWillLeave() {\n        // enable the left menu when leaving the login page\n        this.menu.enable(true);\n    }\n\n    compareFn(e1: any, e2: any): boolean {\n        return e1 && e2 ? e1.name === e2.name : e1 === e2;\n    }\n\n    /**\n     * Enters into the app with the selected wallet\n     */\n    public login() {\n\n        this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n            let loader = this.loading.create({\n                content: res\n            });\n\n            loader.present().then(_ => {\n                if (!this.selectedWallet) {\n                    loader.dismiss();\n                    this.alert.showWalletNotSelectedAlert();\n                }\n\n                // Decrypt/generate private key and check it. Returned private key is contained into this.common\n                try {\n                    this.common.privateKey = this.nem.passwordToPrivateKey(this.common.password, this.selectedWallet);\n                    this.wallet.setSelectedWallet(this.selectedWallet);\n                    loader.dismiss();\n                    this.navCtrl.setRoot(BalancePage);\n                } catch (err) {\n                    console.log(err);\n                    this.common.privateKey = '';\n                    loader.dismiss();\n                    this.alert.showInvalidPasswordAlert();\n                }\n            });\n        });\n    }\n\n    /**\n     * Moves to Signup Page\n     */\n    public goToSignup() {\n        this.navCtrl.push(SignupPage);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {Injectable} from '@angular/core';\nimport {TranslateService } from '@ngx-translate/core';\nimport {Platform} from 'ionic-angular';\nimport { Globalization } from '@ionic-native/globalization';\n\n// import { Http } from '@angular/http';\n// import 'rxjs/add/operator/map';\n\n/*\n Generated class for the Alert provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular DI.\n */\n\n@Injectable()\nexport class LanguageProvider {\n    availableLanguages: string[];\n    defaultLanguage: string;\n    constructor(private translateService: TranslateService, private platform: Platform, private globalization: Globalization) {\n        this.availableLanguages = ['en', 'es','ca', 'ko', 'ru', 'pl', 'ja', 'de','cmn-Hans-CN'];\n        this.defaultLanguage = 'en';\n    }\n\n   setLanguage(){\n       //i18n configuration\n       this.translateService.setDefaultLang('en');\n       if (this.platform.is('cordova')) {\n           this.globalization.getPreferredLanguage()\n               .then(language => {\n                   //if the file is available\n                   if (language.value in this.availableLanguages) {\n                       this.translateService.use(language.value);\n                   }\n                   //else, try with the first substring\n                   else{\n                       for (var lang of this.availableLanguages){\n                           if(language.value.split(\"-\")[0] == lang){\n                               this.translateService.use(lang);\n                               break;\n                           }\n                       }\n                   }\n               })\n               .catch(e => console.log(e));\n       }\n       else{\n           this.translateService.use(this.defaultLanguage);\n       }\n   }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/language/language.provider.ts","import {Component} from '@angular/core';\nimport {NavController, Platform, LoadingController} from 'ionic-angular';\nimport {Subscription} from 'rxjs';\n\nimport {SocialSharing} from '@ionic-native/social-sharing';\nimport {Clipboard} from '@ionic-native/clipboard';\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport * as kjua from \"kjua\";\n\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\nimport {ToastProvider} from '../../providers/toast/toast.provider';\n\n\nimport {LoginPage} from \"../login/login\";\n\nimport {SimpleWallet} from \"nem-library\";\n\n@Component({\n    selector: 'page-account',\n    templateUrl: 'account.html'\n})\n\nexport class AccountPage {\n    common: any;\n    selectedWallet: SimpleWallet;\n    qrCode: any;\n    private onResumeSubscription: Subscription;\n\n    constructor(public navCtrl: NavController, private nem: NemProvider, private wallet: WalletProvider, private socialSharing: SocialSharing, private loading: LoadingController, private alert: AlertProvider, private platform: Platform, public translate: TranslateService, private toast: ToastProvider, private clipboard: Clipboard) {\n        //Stores sensitive data.\n        this.common = {};\n\n        //Initialize common\n        this._clearCommon();\n\n        this.qrCode = {'src': ''};\n\n        //clear common if app paused\n        this.onResumeSubscription = platform.resume.subscribe(() => {\n            this._clearCommon();\n        });\n\n    }\n\n    /**\n     * Init view with QR and current wallet info\n     * @param transaction  transaction object\n     */\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(\n            value => {\n                if (!value) this.navCtrl.setRoot(LoginPage);\n                else {\n                    this.selectedWallet = value;\n                    let infoQR = this.nem.generateAddressQRText(this.selectedWallet.address);\n                    this._encodeQrCode(infoQR);\n                }\n            }\n        )\n    }\n\n    /**\n     * Clears sensitive data\n     */\n    private _clearCommon() {\n        this.common = {\n            'password': '',\n            'privateKey': ''\n        };\n    }\n\n    /**\n     * Encodes infoQR json into an image\n     * @param infoQR  Object containing account information\n     */\n    private _encodeQrCode(infoQR) {\n        this.qrCode = kjua({\n            size: 256,\n            text: infoQR,\n            fill: '#000',\n            quiet: 0,\n            ratio: 2,\n        });\n    }\n\n    /**\n     * Determines if private key can be shown, if it is correct\n     * @param transaction  transaction object\n     */\n    private _canShowPrivateKey() {\n        try {\n            this.common.privateKey = this.nem.passwordToPrivateKey(this.common.password, this.selectedWallet);\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Share current account through apps installed on the phone\n     */\n    public shareAddress() {\n        if (this.platform.is('cordova')) {\n            let textToShare = this.selectedWallet.address;\n            this.socialSharing.share(textToShare.plain(), \"My NEM Address\", null, null).then(_ => {});\n        }\n        else this.alert.showFunctionallityOnlyAvailableInMobileDevices();\n    }\n\n    /**\n     * Shows private key if private key is correct\n     * @param transaction  transaction object\n     */\n    public showPrivateKey() {\n        this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n            let loader = this.loading.create({\n                content: res\n            });\n\n            loader.present().then(_ => {\n                if (!this._canShowPrivateKey()) {\n                    loader.dismiss();\n                    this._clearCommon();\n                    this.alert.showInvalidPasswordAlert();\n                }\n                else loader.dismiss();\n            });\n        });\n    }\n\n    /**\n     * Copy private key to Clipboard\n     */\n    public copyPrivateKeyToClipboard(){\n        if (this.platform.is('cordova')) {\n            this.clipboard.copy(this.common.privateKey).then(_ => {\n                this.toast.showPrivateKeyCopyCorrect();\n            });\n        }\n        else this.alert.showFunctionallityOnlyAvailableInMobileDevices();\n    }\n\n\n    /**\n     * Removes private key\n     */\n    public hidePrivateKey() {\n        this._clearCommon();\n    }\n\n    /**\n     * Clears data and moves to login screen\n     * @param transaction  transaction object\n     */\n    public logout(){\n        this.wallet.unsetSelectedWallet();\n        this._clearCommon();\n        this.navCtrl.setRoot(LoginPage);\n    }\n\n    ngOnDestroy() {\n        // always unsubscribe your subscriptions to prevent leaks\n        this.onResumeSubscription.unsubscribe();\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, AlertController, LoadingController} from 'ionic-angular';\nimport {Keyboard} from '@ionic-native/keyboard';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner';\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {ToastProvider} from '../../providers/toast/toast.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {BalancePage} from '../balance/balance';\nimport {LoginPage} from '../login/login';\n\nimport {SimpleWallet, MosaicTransferable, Address, XEM, NemAnnounceResult} from 'nem-library';\nimport {Observable} from \"nem-library/node_modules/rxjs\";\n\nimport 'rxjs/add/operator/toPromise';\n\n@Component({\n    selector: 'page-transfer',\n    templateUrl: 'transfer.html'\n})\nexport class TransferPage {\n    amount: number;\n    rawRecipient: string;\n    recipient: Address;\n    selectedMosaic: MosaicTransferable;\n    isMosaicTransfer: boolean;\n    common: any;\n    selectedWallet: SimpleWallet;\n    fee: number;\n    message: string;\n    mosaics: any;\n\n    constructor(public navCtrl: NavController, private navParams: NavParams, private nem: NemProvider, private wallet: WalletProvider, private alert: AlertProvider, private toast: ToastProvider, private barcodeScanner: BarcodeScanner, private alertCtrl: AlertController, private loading: LoadingController, private keyboard: Keyboard, public translate: TranslateService) {\n\n        this.amount = 0;\n        this.rawRecipient = navParams.get('address') || '';\n        this.selectedMosaic = <MosaicTransferable>navParams.get('selectedMosaic');\n        this.fee = 0;\n        this.isMosaicTransfer = false;\n        this.message = '';\n        this.mosaics = [];\n\n        //Stores sensitive data.\n        this.common = {};\n\n        //Initializes sensitive data.\n        this._clearCommon();\n\n    }\n\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(\n            value => {\n                if (!value) {\n                    this.navCtrl.setRoot(LoginPage);\n                }\n                else {\n                    this.selectedWallet = value;\n                }\n            }\n        )\n    }\n\n    /**\n     * Clears sensitive data\n     */\n    private _clearCommon() {\n        this.common = {\n            'password': '',\n            'privateKey': ''\n        };\n    }\n\n    /**\n     * Check if user can send tranaction\n     * TODO: encapsulate in a service, implememntation it is duplicated in other controllers too\n     */\n    private _canSendTransaction() {\n        if (this.common.password) {\n            try {\n                this.common.privateKey = this.nem.passwordToPrivateKey(this.common.password, this.selectedWallet);\n                return true;\n            } catch (err) {\n                return false;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Confirms transaction form xem and mosaicsTransactions\n     */\n    private _confirmTransaction(): Observable<NemAnnounceResult> {\n        let transferTransaction;\n        if (this.isMosaicTransfer) transferTransaction = this.nem.prepareMosaicTransaction(this.recipient, this.mosaics, this.message);\n        else transferTransaction = this.nem.prepareTransaction(this.recipient, this.amount, this.message);\n        return this.nem.confirmTransaction(transferTransaction, this.selectedWallet, this.common.password);\n    }\n\n    /**\n     * alert Confirmation subtitle builder\n     */\n    private _subtitleBuilder(res) {\n\n        var subtitle = res['YOU_ARE_GOING_TO_SEND'] + ' <br/><br/> ';\n        var currency = '';\n        if (XEM.MOSAICID.equals(this.selectedMosaic.mosaicId)) {\n            currency = \"<b>\" + res['AMOUNT'] + \":</b> \" + this.amount + \" xem\";\n        }\n        else {\n            currency = \"<b>\" + res['AMOUNT'] + \"</b> \" + this.amount + \" \" + this.selectedMosaic.mosaicId.description();\n        }\n        subtitle += currency;\n        var _fee = this.fee / 1000000;\n        subtitle += '<br/><br/>  <b>' + res['FEE'] + ':</b> ' + _fee + ' xem';\n\n        if (this.selectedMosaic.levy != undefined && 'mosaicId' in this.selectedMosaic.levy) {\n            var _levy = 0;\n            return this.nem.formatLevy(this.mosaics[0]).then(value => { // TODO: format levy\n                _levy = value;\n                subtitle += \"<br/><br/> <b>\" + res['LEVY'] + \":</b> \" + _levy + \" \" + this.selectedMosaic.levy.mosaicId.name;\n                return subtitle;\n            });\n        }\n        else {\n            return Promise.resolve(subtitle);\n        }\n    }\n\n    /**\n     * Presents prompt to confirm the transaction, handling confirmation\n     */\n    private _presentPrompt() {\n        this.translate.get(['YOU_ARE_GOING_TO_SEND', 'AMOUNT', 'FEE', 'LEVY', 'CONFIRM_TRANSACTION', 'PASSWORD', 'CANCEL', 'CONFIRM', 'PLEASE_WAIT'], {}).subscribe((res) => {\n            this._subtitleBuilder(res).then(subtitle => {\n\n                let alert = this.alertCtrl.create({\n                    title: res['CONFIRM_TRANSACTION'],\n                    subTitle: subtitle,\n                    inputs: [\n                        {\n                            name: 'password',\n                            placeholder: res['PASSWORD'],\n                            type: 'password'\n                        },\n                    ],\n                    buttons: [\n                        {\n                            text: res['CANCEL'],\n                            role: 'cancel'\n                        },\n                        {\n                            text: res['CONFIRM'],\n                            handler: data => {\n                                this.keyboard.close();\n                                this.common.password = data.password;\n                                let loader = this.loading.create({\n                                    content: res['PLEASE_WAIT']\n                                });\n\n                                loader.present().then(_ => {\n                                    if (this._canSendTransaction()) {\n                                        this._confirmTransaction().subscribe(value => {\n                                            loader.dismiss();\n                                            console.log(\"Transactions confirmed\");\n                                            this.toast.showTransactionConfirmed();\n                                            this.navCtrl.push(BalancePage, {});\n                                            this._clearCommon();\n\n                                        }, error => {\n                                            console.log(error);\n                                            if (error.toString().indexOf('FAILURE_INSUFFICIENT_BALANCE') >= 0) {\n                                                loader.dismiss();\n                                                this.alert.showDoesNotHaveEnoughFunds();\n                                            }\n                                            else if (error.toString().indexOf('FAILURE_MESSAGE_TOO_LARGE') >= 0) {\n                                                loader.dismiss();\n                                                this.alert.showMessageTooLarge();\n                                            }\n                                            else if (error.statusCode == 404) {\n                                                loader.dismiss();\n                                                this.alert.showAlertDoesNotBelongToNetwork();\n                                            }\n                                            else {\n                                                loader.dismiss();\n                                                this.alert.showError(error);\n                                            }\n                                        });\n                                    }\n                                    else {\n                                        this._clearCommon();\n                                        loader.dismiss();\n                                        this.alert.showInvalidPasswordAlert();\n                                    }\n                                });\n                            }\n                        }\n                    ]\n                });\n\n                alert.onDidDismiss(() => {\n                    this.keyboard.close()\n                });\n\n                alert.present();\n            });\n        });\n    }\n\n    /**\n     * Calculates fee into this.fee and presents prompt once finished\n     */\n    private _updateFees() {\n        let transferTransaction;\n        if (this.isMosaicTransfer) transferTransaction = this.nem.prepareMosaicTransaction(this.recipient, this.mosaics, this.message);\n        else transferTransaction = this.nem.prepareTransaction(this.recipient, this.amount, this.message);\n        this.fee = transferTransaction.fee;\n    }\n\n    /**\n     * Sets transaction amount and determine if it is mosaic or xem transaction, updating fees\n     */\n    public startTransaction() {\n        //if is nem:xem, set amount\n        if (!this.amount) this.amount = 0;\n\n        if (!XEM.MOSAICID.equals(this.selectedMosaic.mosaicId)) {\n            //if mosaic, amount represents multiplier\n            this.isMosaicTransfer = true;\n            this.mosaics = [new MosaicTransferable(this.selectedMosaic.mosaicId, this.selectedMosaic.properties, this.amount, this.selectedMosaic.levy)];\n        }\n\n        let recipientAddress;\n        try{\n            recipientAddress = new Address(this.rawRecipient.toUpperCase().replace('-', ''));\n            if (!this.nem.isValidAddress(recipientAddress)) this.alert.showAlertDoesNotBelongToNetwork();\n            else {\n                this.recipient = recipientAddress;\n                this._updateFees();\n                this._presentPrompt();\n            }\n        }\n        catch (err) {\n            this.alert.showAlertDoesNotBelongToNetwork();\n        }\n    }\n\n    /**\n     * Scans Account QR and sets account into this.rawRecipient\n     */\n    public scanQR() {\n        this.barcodeScanner.scan().then((barcodeData) => {\n            let addresObject = JSON.parse(barcodeData.text);\n            this.rawRecipient = addresObject.data.addr;\n            this.amount = addresObject.data.amount;\n            this.message = addresObject.data.msg;\n        }, (err) => {\n            console.log(\"Error on scan\");\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transfer/transfer.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, AlertController, LoadingController} from 'ionic-angular';\nimport {Keyboard} from '@ionic-native/keyboard';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner';\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {ToastProvider} from '../../providers/toast/toast.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {LoginPage} from '../login/login';\n\nimport {SimpleWallet, MosaicTransferable} from 'nem-library';\n\nimport 'rxjs/add/operator/toPromise';\nimport * as kjua from \"kjua\";\n\n@Component({\n    selector: 'page-receive',\n    templateUrl: 'receive.html'\n})\nexport class ReceivePage {\n    selectedMosaic: MosaicTransferable;\n    selectedWallet: SimpleWallet;\n    amount: number;\n    message: any;\n    qrCode: any;\n\n    constructor(public navCtrl: NavController, private navParams: NavParams, private nem: NemProvider, private wallet: WalletProvider, private alert: AlertProvider, private toast: ToastProvider, private barcodeScanner: BarcodeScanner, private alertCtrl: AlertController, private loading: LoadingController, private keyboard: Keyboard, public translate: TranslateService) {\n\n        this.amount = 0;\n        this.selectedMosaic = <MosaicTransferable>navParams.get('selectedMosaic');\n        this.message = '';\n        this.qrCode = {'src': ''};\n    }\n\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(\n            value => {\n                if (!value) {\n                    this.navCtrl.setRoot(LoginPage);\n                }\n                else {\n                    this.selectedWallet = value;\n                    this.updateQR();\n                }\n            }\n        )\n    }\n\n\n  /**\n     * Encodes infoQR json into an image\n     * @param infoQR  Object containing account information\n     */\n    private _encodeQrCode(infoQR) {\n        this.qrCode = kjua({\n            size: 256,\n            text: infoQR,\n            fill: '#000',\n            quiet: 0,\n            ratio: 2,\n        });\n    }\n\n     /**\n     * Update QR code with info\n     */\n    public updateQR() {\n        let infoQR = this.nem.generateInvoiceQRText(this.selectedWallet.address, this.amount, this.message);\n        this._encodeQrCode(infoQR);\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/receive/receive.ts","import {Component} from '@angular/core';\nimport {NavController, MenuController} from 'ionic-angular';\nimport {SignupSimpleWalletPage} from '../signup_simplewallet/signup';\nimport {SignupPrivateKeyPage} from '../signup_privatekey/signup';\n\n@Component({\n    selector: 'page-signup',\n    templateUrl: 'signup.html'\n})\n\nexport class SignupPage {\n\n    tab1Root = SignupSimpleWalletPage;\n    tab2Root = SignupPrivateKeyPage;\n\n    constructor(public navCtrl: NavController, private menu: MenuController) {\n\n    }\n\n    ionViewWillEnter() {\n        // the left menu should be disabled on the login page\n        this.menu.enable(false);\n    }\n\n    ionViewWillLeave() {\n        // enable the left menu when leaving the login page\n        this.menu.enable(true);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.ts","import {Component} from '@angular/core';\nimport {App, AlertController, LoadingController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Clipboard } from '@ionic-native/clipboard';\n\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {ToastProvider} from '../../providers/toast/toast.provider';\n\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {LoginPage} from '../login/login';\n\nimport {SimpleWallet} from \"nem-library\";\n\n@Component({\n    selector: 'page-signup-simple-wallet',\n    templateUrl: 'signup.html'\n})\nexport class SignupSimpleWalletPage {\n    newAccount: any;\n\n    constructor(public app: App, private nem: NemProvider, private wallet: WalletProvider, private loading: LoadingController, private alert: AlertProvider, public translate: TranslateService, private alertCtrl: AlertController,private toast: ToastProvider, private clipboard: Clipboard) {\n        // sensitive data\n        this.newAccount = null;\n\n        //initializes sensitive data\n        this._clearNewAccount();\n    }\n\n    /**\n     * Resets senstive data\n     */\n    private _clearNewAccount() {\n        this.newAccount = {\n            'name': '',\n            'password': '',\n            'repeat_password': ''\n        };\n    }\n\n\n    /**\n     * Shows keep private key safe message\n     */\n    private _showTutorialAlert(wallet: SimpleWallet) {\n        this.translate.get(['KEEP_YOUR_PRIVATE_KEY_SAFE', 'PASSWORD_WARNING', 'IVE_COPIED_IT_MANUALLY','COPY_TO_CLIPBOARD', 'OK'], {}).subscribe((res) => {\n\n            let alert = this.alertCtrl.create({\n                title: res['KEEP_YOUR_PRIVATE_KEY_SAFE'],\n                subTitle: res['PASSWORD_WARNING'] + '<br/><br/> <span style=\"text-align:center\"><b>' + this.nem.passwordToPrivateKey(this.newAccount.password, wallet)\n                + '</b></span>',\n                buttons: [\n                    {\n                        text: res['IVE_COPIED_IT_MANUALLY'],\n                        handler: _ => {\n                            //clear private key just in case\n                            this._clearNewAccount();\n                            this.app.getRootNav().push(LoginPage);\n                        }\n                    },\n\n                    {\n                        text: res['COPY_TO_CLIPBOARD'],\n                        handler: _ => {\n\n                            this.clipboard.copy(this.nem.passwordToPrivateKey(this.newAccount.password, wallet)).then(_ => {\n                                this.toast.showPrivateKeyCopyCorrect();\n                                this._clearNewAccount();\n                                this.app.getRootNav().push(LoginPage);\n                            });\n                            //clear private key just in case\n                        }\n                    }\n                ],\n                enableBackdropDismiss: false\n            });\n            alert.present();\n\n\n        })\n    }\n\n    /**\n     * Creates Simple wallet\n     */\n    public createSimpleWallet() {\n        if (this.newAccount.password != this.newAccount.repeat_password) {\n            this.alert.showPasswordDoNotMatch();\n        }\n        else if (this.newAccount.password.length < 8) {\n            this.alert.showWeakPassword()\n        }\n        else {\n            this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n\n                let loader = this.loading.create({\n                    content: res\n                });\n\n                loader.present().then(_ => {\n                    let createdWallet = this.nem.createSimpleWallet(this.newAccount.name, this.newAccount.password);\n\n                    this.wallet.checkIfWalletNameExists(createdWallet.name).then(value => {\n                        if (value) {\n                            loader.dismiss();\n                            this.alert.showWalletNameAlreadyExists();\n                        }\n                        else {\n                            this.wallet.storeWallet(createdWallet).then(value => {\n                                loader.dismiss();\n                                this._showTutorialAlert(createdWallet);\n                            });\n                        }\n                    });\n                });\n            });\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup_simplewallet/signup.ts","import {Component} from '@angular/core';\nimport {App, LoadingController, AlertController, Keyboard} from 'ionic-angular';\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner';\n\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {AlertProvider} from '../../providers/alert/alert.provider';\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\n\nimport {LoginPage} from '../login/login';\n\n@Component({\n    selector: 'page-signup-privatekey',\n    templateUrl: 'signup.html'\n})\nexport class SignupPrivateKeyPage {\n    newAccount: any;\n\n    constructor(public app: App, private nem: NemProvider, private wallet: WalletProvider, private loading: LoadingController, private alertCtrl: AlertController, private alert: AlertProvider, public translate: TranslateService, private barcodeScanner: BarcodeScanner, private keyboard: Keyboard) {\n        //sensitive data\n        this.newAccount = null;\n\n        //initialize senstivie data\n        this._clearNewAccount();\n    }\n\n    /**\n     * Clears sensitive data\n     */\n    private _clearNewAccount() {\n        this.newAccount = {\n            'name': '',\n            'password': '',\n            'private_key': '',\n            'repeat_password': ''\n        };\n    }\n\n\n    /**\n     * Scans wallet QR and stores its private key in newAccount.privateKey\n     */\n    public scanWalletQR() {\n        this.barcodeScanner.scan().then(barcode => {\n\n            let walletInfo = JSON.parse(barcode.text);\n\n            this.translate.get(['IMPORT_ACCOUNT_QR_WARNING', 'PASSWORD', 'CANCEL', 'CONFIRM', 'PLEASE_WAIT'], {}).subscribe((res) => {\n\n                let alert = this.alertCtrl.create({\n                    title: res['PASSWORD'],\n                    subTitle: res['IMPORT_ACCOUNT_QR_WARNING'],\n                    inputs: [\n                        {\n                            name: 'password',\n                            placeholder: res['PASSWORD'],\n                            type: 'password'\n                        },\n                    ],\n                    buttons: [\n                        {\n                            text: res['CANCEL'],\n                            role: 'cancel'\n                        },\n                        {\n                            text: res['CONFIRM'],\n                            handler: data => {\n                                this.keyboard.close();\n                                let loader = this.loading.create({\n                                    content: res['PLEASE_WAIT']\n                                });\n\n                                loader.present().then(_ => {\n                                    if (data.password < 8) {\n                                        this.alert.showWeakPassword();\n                                        loader.dismiss();\n                                    }\n                                    else {\n                                        try {\n                                            this.newAccount.private_key = this.nem.decryptPrivateKey(data.password, walletInfo);\n                                            loader.dismiss();\n                                        } catch (err) {\n                                            this.alert.showInvalidPasswordAlert();\n                                            loader.dismiss();\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    ]\n                });\n                alert.onDidDismiss(() => {\n                    this.keyboard.close();\n                });\n\n                alert.present();\n            });\n\n        }).catch(err => {\n            console.log(\"Error on scan\");\n        });\n    };\n\n    /**\n     * Creates Wallet from this.newAccount.private_key\n     */\n    public createPrivateKeyWallet() {\n        if (this.newAccount.password != this.newAccount.repeat_password) {\n            this.alert.showPasswordDoNotMatch();\n        }\n        else if (!(this.newAccount.private_key.length != 64 || this.newAccount.private_key.length != 66)) {\n            this.alert.showInvalidPrivateKey();\n        }\n        else if (this.newAccount.password.length < 8) {\n            this.alert.showWeakPassword();\n        }\n        else {\n\n            this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n                let loader = this.loading.create({\n                    content: res\n                });\n\n                loader.present().then(_ => {\n                    let createdWallet;\n                    try {\n                        createdWallet = this.nem.createPrivateKeyWallet(this.newAccount.name, this.newAccount.password, this.newAccount.private_key);\n                    }\n                    catch (e) {\n                        loader.dismiss();\n                        this.alert.showInvalidPrivateKey();\n                    }\n\n                    if (createdWallet) {\n                        this.wallet.checkIfWalletNameExists(createdWallet.name).then(value => {\n                            if (value) {\n                                loader.dismiss();\n                                this.alert.showWalletNameAlreadyExists();\n                            }\n                            else {\n                                this.wallet.storeWallet(createdWallet).then(value => {\n                                    loader.dismiss();\n                                    this._clearNewAccount();\n                                    this.app.getRootNav().push(LoginPage);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup_privatekey/signup.ts","import {Component} from '@angular/core';\nimport {NavController} from 'ionic-angular';\nimport {TransactionsConfirmedPage} from '../transactions_confirmed/transactions';\nimport {TransactionsUnconfirmedPage} from '../transactions_unconfirmed/transactions';\n\n@Component({\n    selector: 'page-transactions',\n    templateUrl: 'transactions.html'\n})\nexport class TransactionsPage {\n\n    tab1Root = TransactionsConfirmedPage;\n    tab2Root = TransactionsUnconfirmedPage;\n\n    constructor(public navCtrl: NavController) {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions/transactions.ts","import {Component} from '@angular/core';\nimport {NavController, LoadingController, Platform} from 'ionic-angular';\nimport {Clipboard} from '@ionic-native/clipboard';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {ToastProvider} from '../../providers/toast/toast.provider';\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\n\n\nimport {LoginPage} from '../login/login';\n\nimport {Wallet, Transaction, TransferTransaction}  from 'nem-library';\nimport {TransactionTypes} from \"nem-library/dist/src/models/transaction/TransactionTypes\";\n\n@Component({\n    selector: 'page-transactions',\n    templateUrl: 'transactions.html'\n})\nexport class TransactionsConfirmedPage {\n    transactions: Transaction[];\n    selectedWallet: Wallet;\n    TransactionTypes = TransactionTypes;\n\n    constructor(private platform: Platform, public navCtrl: NavController, private nem: NemProvider, private wallet: WalletProvider, private loading: LoadingController, private toast: ToastProvider, private clipboard: Clipboard, public translate: TranslateService, private alert: AlertProvider) {\n        this.transactions = [];\n    }\n\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(\n            wallet => {\n                if (!wallet) {\n                    this.navCtrl.push(LoginPage);\n                }\n                else {\n                    this.selectedWallet = wallet;\n                    this.getTransactions(false);\n                }\n            })\n    }\n\n    /**\n     * Retrieves current account confirmed transactions into this.transactions\n     * @param refresher  Ionic refresher or false, if called on View Enter\n     */\n    public getTransactions(refresher) {\n\n        this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n            let loader = this.loading.create({\n                content: res\n            });\n\n\n            if (!refresher) loader.present();\n            this.nem.getAllTransactionsFromAnAccount(this.selectedWallet.address)\n            .flatMap(_ => _)\n            .toArray()\n            .subscribe(\n                transactions => {\n                    console.log(transactions);\n                    if (refresher) refresher.complete();\n                    else loader.dismiss();\n                    this.transactions = transactions;\n                })\n        })\n    }\n\n    /**\n     * Copies into clipboard recipient or sender address\n     * @param transaction  transaction object\n     */\n    public copyTransactionAddress(transaction: TransferTransaction) {\n\n        if (this.platform.is('cordova')) {\n            let copiableAddress = \"\";\n            if (this.selectedWallet.address && transaction.recipient && transaction.signer) {\n                if (this.selectedWallet.address.plain() == transaction.recipient.plain()) {\n                    copiableAddress = transaction.signer.address.plain();\n                }\n                else {\n                    copiableAddress = transaction.recipient.plain();\n                }\n                this.clipboard.copy(copiableAddress).then(_ => {\n                    this.toast.showAddressCopyCorrect();\n                });\n            }\n        }\n\n        else {\n            this.alert.showFunctionallityOnlyAvailableInMobileDevices();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions_confirmed/transactions.ts","import {Component} from '@angular/core';\nimport {NavController, LoadingController, Platform} from 'ionic-angular';\nimport {Clipboard} from '@ionic-native/clipboard';\nimport {TranslateService} from '@ngx-translate/core';\n\nimport {ToastProvider} from '../../providers/toast/toast.provider';\nimport {NemProvider} from '../../providers/nem/nem.provider';\nimport {WalletProvider} from '../../providers/wallet/wallet.provider';\nimport {AlertProvider} from '../../providers/alert/alert.provider';\n\nimport {LoginPage} from '../login/login';\n\nimport {Wallet, Transaction, TransferTransaction} from 'nem-library';\nimport {TransactionTypes} from \"nem-library/dist/src/models/transaction/TransactionTypes\";\n\n@Component({\n    selector: 'page-transactions',\n    templateUrl: 'transactions.html'\n})\nexport class TransactionsUnconfirmedPage {\n    transactions: Transaction[];\n    selectedWallet: Wallet;\n    TransactionTypes = TransactionTypes;\n\n    constructor(private platform: Platform, public navCtrl: NavController, private nem: NemProvider, private wallet: WalletProvider, private loading: LoadingController, private toast: ToastProvider, private clipboard: Clipboard, public translate: TranslateService, private alert: AlertProvider) {\n        this.transactions = [];\n    }\n\n    ionViewWillEnter() {\n        this.wallet.getSelectedWallet().then(\n            wallet => {\n                if (!wallet) {\n                    this.navCtrl.push(LoginPage);\n                }\n                else {\n                    this.selectedWallet = wallet;\n                    this.getTransactions(false);\n                }\n            })\n    }\n\n    /**\n     * Retrieves current account unconfirmed transactions into this.transactions\n     * @param refresher  Ionic refresher or false, if called on View Enter\n     */\n    public getTransactions(refresher) {\n\n        this.translate.get('PLEASE_WAIT', {}).subscribe((res: string) => {\n            let loader = this.loading.create({\n                content: res\n            });\n\n\n            if (!refresher) loader.present();\n            this.nem.getUnconfirmedTransactionsFromAnAccount(this.selectedWallet.address)\n                .flatMap(_ => _)\n                .toArray()\n                .subscribe(\n                    transactions => {\n                        console.log(transactions);\n                        if (refresher) refresher.complete();\n                        else loader.dismiss();\n                        this.transactions = transactions;\n                    })\n        })\n    }\n\n\n    /**\n     * Copies into clipboard recipient or sender address\n     * @param transaction  transaction object\n     */\n    public copyTransactionAddress(transaction: TransferTransaction) {\n        if (this.platform.is('cordova')) {\n            let copiableAddress = \"\";\n            if (this.selectedWallet.address && transaction.recipient && transaction.signer) {\n                if (this.selectedWallet.address.plain() == transaction.recipient.plain()) {\n                    copiableAddress = transaction.signer.address.plain();\n                }\n                else {\n                    copiableAddress = transaction.recipient.plain();\n                }\n                this.clipboard.copy(copiableAddress).then(_ => {\n                    this.toast.showAddressCopyCorrect();\n                });\n            }\n        }\n        else {\n            this.alert.showFunctionallityOnlyAvailableInMobileDevices();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transactions_unconfirmed/transactions.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, LoadingController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {SocialSharing} from '@ionic-native/social-sharing';\n\nimport {ToastProvider} from '../../../providers/toast/toast.provider';\nimport {WalletProvider} from '../../../providers/wallet/wallet.provider';\nimport {ContactProvider} from '../../../providers/contact/contact.provider';\nimport {AlertProvider} from '../../../providers/alert/alert.provider';\nimport {NemProvider} from '../../../providers/nem/nem.provider';\n\nimport {Address} from 'nem-library';\n\nimport {ContactListPage} from '../list/list';\nimport {BalancePage} from '../../balance/balance';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Component({\n    selector: 'update-contact-page',\n    templateUrl: 'update.html'\n})\nexport class UpdateContactPage {\n    owner: string;\n    name: string;\n    address: string;\n    previousAddress:string;\n    id : number;\n\n    constructor(public navCtrl: NavController, private navParams: NavParams, private nem: NemProvider, private wallet: WalletProvider, private toast: ToastProvider, private contact: ContactProvider, private loading: LoadingController, public translate: TranslateService, private alert: AlertProvider, private socialSharing:SocialSharing) {\n        this.owner = navParams.get('owner');\n        this.name = navParams.get('name');\n        this.address = navParams.get('address') || '';\n        this.id = navParams.get('id');\n\n        if (this.id) this.previousAddress = this.address.toUpperCase().replace('-', '');\n\n    }\n\n    /**\n     * creates a new contact\n     *@param address address to assign\n     */\n    private _createContact(address:string){\n        this.contact.searchContactName(this.owner, address).then(contacts =>{\n            if(contacts.length > 0) this.alert.showContactAlreadyExists();\n            else{\n                this.contact.create(this.owner, this.name, address).then(_=>{\n                    this.toast.showContactCreated();\n                    this.navCtrl.push(ContactListPage, {});\n                });\n            }\n        }).catch(err => {\n            console.log(err)\n        });\n    }\n\n    /**\n     * updates existing contact\n     * @param address address to assign\n     */\n    private _updateContact(address:string){\n\n        this.contact.searchContactName(this.owner, address).then(contacts =>{\n\n            if(contacts.length > 0 && address != this.previousAddress) this.alert.showContactAlreadyExists();\n            else{\n                this.contact.update(this.id, this.name, address).then(_=>{\n                    this.toast.showContactUpdated();\n                    this.navCtrl.push(ContactListPage, {});\n                })\n            }\n        }).catch(err => {\n            console.log(err)\n        });\n    }\n\n\n    /**\n     * updates contact or creates it\n     */\n    public saveContact(){\n        let _rawAddress = this.address.toUpperCase().replace('-', '');\n        try{\n            if (!this.nem.isValidAddress(new Address(_rawAddress))){\n                this.alert.showAlertDoesNotBelongToNetwork();\n            }\n            else{\n                if (this.id) this._updateContact(_rawAddress);\n                else this._createContact(_rawAddress);\n            }\n        }\n        catch (err) {\n            this.alert.showAlertDoesNotBelongToNetwork();\n        }\n    }\n\n    /**\n     * moves to balance\n     * @param address address to send asset\n     */\n    public goToBalance() {\n        this.navCtrl.push(BalancePage, {'address': this.previousAddress});\n    };\n\n    /**\n     * Share current account through apps installed on the phone\n     */\n    public shareAddress() {\n        this.socialSharing.share(this.previousAddress, this.name + \" Address\", null, null).then(_ => {\n\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/update/update.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {Http, HttpModule} from '@angular/http'\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport {IonicStorageModule} from '@ionic/storage';\n\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {Clipboard} from '@ionic-native/clipboard';\nimport {Keyboard} from '@ionic-native/keyboard';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { AppVersion } from '@ionic-native/app-version';\n\nimport {SocialSharing} from '@ionic-native/social-sharing';\nimport {Network} from '@ionic-native/network';\nimport {BarcodeScanner} from '@ionic-native/barcode-scanner';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { Globalization } from '@ionic-native/globalization';\n\nimport {AlertProvider} from '../providers/alert/alert.provider';\nimport {ToastProvider} from '../providers/toast/toast.provider';\nimport {NemProvider} from '../providers/nem/nem.provider';\nimport {WalletProvider} from '../providers/wallet/wallet.provider';\nimport {ContactProvider} from '../providers/contact/contact.provider';\nimport {LanguageProvider} from '../providers/language/language.provider';\n\n\nimport {DivideByExponentialBaseTenPipe} from '../pipes/divide-by-exponential-base-ten.pipe';\nimport {FormatLevyPipe} from '../pipes/format-levy.pipe';\nimport {SearchContactPipe} from '../pipes/search-contact.pipe';\n\nimport {MyApp} from './app.component';\nimport {BalancePage} from '../pages/balance/balance';\nimport {TransactionsPage} from '../pages/transactions/transactions';\nimport {TransferPage} from '../pages/transfer/transfer';\nimport {ReceivePage} from '../pages/receive/receive';\nimport {TransactionsConfirmedPage} from '../pages/transactions_confirmed/transactions';\nimport {TransactionsUnconfirmedPage} from '../pages/transactions_unconfirmed/transactions';\nimport {AccountPage} from '../pages/account/account';\nimport {LoginPage} from '../pages/login/login';\nimport {SignupPage} from '../pages/signup/signup';\nimport {SignupSimpleWalletPage} from '../pages/signup_simplewallet/signup';\nimport {SignupPrivateKeyPage} from '../pages/signup_privatekey/signup';\n\nimport {ContactListPage} from '../pages/contact/list/list';\nimport {UpdateContactPage} from '../pages/contact/update/update';\n\nimport {ImportanceTransferTransactionComponent} from '../pages/transactions/partials/importance-transfer-transaction/importance-transfer-transaction';\nimport {MosaicDefinitionTransactionComponent} from '../pages/transactions/partials/mosaic-definition-transaction/mosaic-definition-transaction';\nimport {MosaicSupplyChangeTransactionComponent} from '../pages/transactions/partials/mosaic-supply-change-transaction/mosaic-supply-change-transaction';\nimport {MultisigTransactionComponent} from '../pages/transactions/partials/multisig-transaction/multisig-transaction';\nimport {ProvisionNamespaceTransactionComponent} from '../pages/transactions/partials/provision-namespace-transaction/provision-namespace-transaction';\nimport {TransferTransactionComponent} from '../pages/transactions/partials/transfer-transaction/transfer-transaction';\nimport {MultisigAggregateModificationTransactionComponent} from '../pages/transactions/partials/multisig-aggregate-modification-transaction/multisig-aggregate-modification-transaction';\n\n\n\nexport function createTranslateLoader(http: Http) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        MyApp,\n        ContactListPage,\n        UpdateContactPage,\n        BalancePage,\n        TransactionsPage,\n        TransferPage,\n        ReceivePage,\n        AccountPage,\n        LoginPage,\n        SignupPage,\n        SignupSimpleWalletPage,\n        SignupPrivateKeyPage,\n        TransactionsConfirmedPage,\n        TransactionsUnconfirmedPage,\n        ImportanceTransferTransactionComponent,\n        MosaicDefinitionTransactionComponent,\n        MosaicSupplyChangeTransactionComponent,\n        MultisigTransactionComponent,\n        ProvisionNamespaceTransactionComponent,\n        TransferTransactionComponent,\n        MultisigAggregateModificationTransactionComponent,\n        DivideByExponentialBaseTenPipe,\n        FormatLevyPipe,\n        SearchContactPipe\n    ],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        IonicModule.forRoot(MyApp),\n        IonicStorageModule.forRoot(),\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [Http]\n            }\n        })\n\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        ContactListPage,\n        UpdateContactPage,\n        BalancePage,\n        TransactionsPage,\n        TransferPage,\n        ReceivePage,\n        TransactionsConfirmedPage,\n        TransactionsUnconfirmedPage,\n        AccountPage,\n        LoginPage,\n        SignupPage,\n        SignupSimpleWalletPage,\n        SignupPrivateKeyPage,\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n        SocialSharing,\n        Clipboard,\n        Keyboard,\n        Network,\n        BarcodeScanner,\n        Globalization,\n        SQLite,\n        AppVersion,\n        NemProvider,\n        WalletProvider,\n        AlertProvider,\n        ToastProvider,\n        ContactProvider,\n        LanguageProvider\n    ]\n})\nexport class AppModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {ToastController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\n\n// import { Http } from '@angular/http';\n// import 'rxjs/add/operator/map';\n\n/*\n Generated class for the Alert provider.\n\n See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n for more info on providers and Angular DI.\n */\n\n@Injectable()\nexport class ToastProvider {\n\n    constructor(private toast: ToastController, private translate: TranslateService) {\n\n    }\n\n    showTransactionConfirmed() {\n        this.translate.get('ALERT_TRANSACTION_CONFIRMED', {}).subscribe((res: string) => {\n\n            let toast = this.toast.create({\n                message: res,\n                duration: 3000,\n                position: 'bottom'\n            });\n            toast.present();\n        });\n    }\n\n    showAddressCopyCorrect() {\n        this.translate.get('ALERT_ADDRESS_COPIED', {}).subscribe((res: string) => {\n\n            let toast = this.toast.create({\n                message: res,\n                duration: 3000,\n                position: 'bottom'\n            });\n            toast.present();\n        });\n    }\n\n\n    showPrivateKeyCopyCorrect() {\n        this.translate.get('ALERT_PRIVATE_KEY_COPIED', {}).subscribe((res: string) => {\n\n            let toast = this.toast.create({\n                message: res,\n                duration: 3000,\n                position: 'bottom'\n            });\n            toast.present();\n        });\n    }\n\n\n    showContactCreated() {\n        this.translate.get('CONTACT_CREATED', {}).subscribe((res: string) => {\n\n            let toast = this.toast.create({\n                message: res,\n                duration: 3000,\n                position: 'bottom'\n            });\n            toast.present();\n        });\n    }\n\n\n    showContactUpdated() {\n        this.translate.get('CONTACT_UPDATED', {}).subscribe((res: string) => {\n\n            let toast = this.toast.create({\n                message: res,\n                duration: 3000,\n                position: 'bottom'\n            });\n            toast.present();\n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/toast/toast.provider.ts"],"sourceRoot":""}